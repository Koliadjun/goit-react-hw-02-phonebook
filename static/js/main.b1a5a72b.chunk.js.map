{"version":3,"sources":["components/Phonebook.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Phonebook.jsx","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmitHandler","id","shortid","generate","reset","this","InputNameId","InputNumberId","className","s","form","onSubmit","htmlFor","type","title","required","onChange","Component","Filter","label","input","ContactList","contacts","handleClick","onClick","list","map","contact","item","button","defaultProps","Phonebook","filter","formSubmitHandler","data","dataNameNormalized","toLowerCase","findItem","find","alert","prevState","listDeleteHandler","onFilterChange","normalizeFilter","filteredContacts","includes","subTitle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1a5a72b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__veRiM\",\"subTitle\":\"Phonebook_subTitle__1Ew39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport s from './ContactForm.module.css';\nexport class ContactForm extends Component {\n  static propTypes = {\n    onSubmitHandler: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmitHandler({ id: shortid.generate(), ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number } = this.state;\n    const InputNameId = shortid.generate();\n    const InputNumberId = shortid.generate();\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label htmlFor={InputNameId}>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={this.handleInputChange}\n          id={InputNameId}\n        />\n        <label htmlFor={InputNumberId}>Number</label>\n        <input\n          id={InputNumberId}\n          type=\"tel\"\n          name=\"number\"\n          //   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={this.handleInputChange}\n        />\n        <button type=\"submit\">add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  const id = shortid.generate();\n  return (\n    <>\n      <label htmlFor={id} className={s.label}>\n        Find contacts by name{' '}\n      </label>\n      <input\n        className={s.input}\n        id={id}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactList.module.css';\n\nexport class ContactList extends Component {\n  static defaultProps = {\n    contacts: [],\n  };\n\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  state = { contacts: this.props.contacts };\n\n  handleClick = id => {\n    this.props.onClick(id);\n  };\n  render() {\n    const contacts = this.props.contacts;\n    return (\n      <ul className={s.list}>\n        {contacts.map(contact => (\n          <li className={s.item} key={contact.id}>\n            {contact.name}:<span>{contact.number}</span>\n            <button\n              className={s.button}\n              onClick={() => this.handleClick(contact.id)}\n              type=\"button\"\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Phonebook.module.css';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nexport class Phonebook extends Component {\n  static defaultProps = {\n    contacts: [],\n  };\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n  };\n  state = {\n    contacts: this.props.contacts,\n    filter: '',\n  };\n  formSubmitHandler = data => {\n    const dataNameNormalized = data.name.toLowerCase();\n    const findItem = this.state.contacts.find(\n      contact => contact.name.toLowerCase() === dataNameNormalized,\n    );\n    if (findItem) {\n      alert(`${findItem.name} is already in contacts`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, data],\n      }));\n    }\n  };\n  listDeleteHandler = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(item => id !== item.id),\n    });\n  };\n\n  onFilterChange = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  render() {\n    const { contacts, value } = this.state;\n    const normalizeFilter = this.state.filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n    return (\n      <>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmitHandler={this.formSubmitHandler} />\n        <h2 className={s.subTitle}>Contacts</h2>\n        <Filter value={value} onChange={this.onFilterChange} />\n        <ContactList\n          contacts={filteredContacts}\n          onClick={this.listDeleteHandler}\n        />\n      </>\n    );\n  }\n}\n\nexport default Phonebook;\n","import './App.css';\nimport React from 'react'\n\nimport Phonebook from './components/Phonebook';\nimport data from './components/data.json'\n\nconst App = () => {\n  return (\n    <Phonebook contacts={data} />\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}