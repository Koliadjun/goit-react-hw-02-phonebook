{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Phonebook.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmitHandler","id","shortid","generate","reset","this","onSubmit","type","title","required","onChange","Component","Filter","ContactList","contacts","handleClick","onClick","map","contact","defaultProps","Phonebook","filter","formSubmitHandler","data","prevState","listDeleteHandler","item","onFilterChange","normalizeFilter","toLowerCase","filteredContacts","includes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.719e37f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nexport class ContactForm extends Component {\n  static propTypes = {\n    onSubmitHandler: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmitHandler({ id: shortid.generate(), ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={this.handleInputChange}\n        />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          //   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={this.handleInputChange}\n        />\n        <button type=\"submit\">add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ContactList extends Component {\n  static defaultProps = {\n    contacts: [],\n  };\n\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  state = { contacts: this.props.contacts };\n\n  handleClick = id => {\n    this.props.onClick(id);\n  };\n  render() {\n    const contacts = this.props.contacts;\n    return (\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id}>\n            {contact.name}\n            <span>{contact.number}</span>\n            <button onClick={() => this.handleClick(contact.id)} type=\"button\">\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nexport class Phonebook extends Component {\n  static defaultProps = {\n    contacts: [],\n  };\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n  };\n  state = {\n    contacts: this.props.contacts,\n    filter: '',\n  };\n  formSubmitHandler = data => {\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, data],\n    }));\n  };\n  listDeleteHandler = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(item => id !== item.id),\n    });\n  };\n\n  onFilterChange = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  render() {\n    const { contacts, value } = this.state;\n    const normalizeFilter = this.state.filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitHandler={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={value} onChange={this.onFilterChange} />\n        <ContactList\n          contacts={filteredContacts}\n          onClick={this.listDeleteHandler}\n        />\n      </>\n    );\n  }\n}\n\nexport default Phonebook;\n","import './App.css';\nimport React from 'react'\n\nimport Phonebook from './components/Phonebook';\nimport data from './components/data.json'\n\nconst App = () => {\n  return (\n    <Phonebook contacts={data} />\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}